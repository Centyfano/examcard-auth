{"version":3,"sources":["./src/app/qr-result/qr-result-routing.module.ts","./src/app/qr-result/qr-result.component.ts","./src/app/qr-result/qr-result.module.ts","./src/app/qr-result/qr-result.component.scss","./src/app/qr-result/qr-result.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AACG;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAiB;KAC7B;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACfgB;AACD;AACK;IAOzC,iBAAiB,SAAjB,iBAAiB;IAK5B,YACU,QAAyB,EACzB,KAAqB;QADrB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,UAAK,GAAL,KAAK,CAAgB;QAN/B,WAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;IAOtC,CAAC;IAEJ,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC9C,CAAC,GAAQ,EAAE,EAAE;YACX,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,wCAAwC,CAAC;YAC7D,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CACvC,GAAG,CAAC,mBAAmB,CAAC,OAAO,CAAC,SAAS,EACzC,GAAG,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAU,EAC1C,GAAG,CAAC,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CACzC,CAAC;QACJ,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;aAClC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,CAAS,EAAE,CAAM,EAAE,CAAS;QACnC,IAAI,CAAC,KAAK,IAAI,EAAE;YACd,CAAC,GAAG,EAAE,CAAC;SACR;QACD,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;CACF;;YA/CQ,+DAAe;YADf,2DAAc;;AAQV,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,mFAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAwC7B;AAxC6B;;;;;;;;;;;;;;;;;;;;;;;;ACTW;AACM;AAEoB;AACT;AACF;AACX;IAWhC,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAT1B,uDAAQ,CAAC;QACR,YAAY,EAAE,CAAC,mEAAiB,CAAC;QACjC,OAAO,EAAE;YACP,yDAAY;YACZ,4EAAqB;YACrB,kEAAkB;YAClB,uDAAW;SACZ;KACF,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;ACjB3B,iEAAe,aAAa,uBAAuB,GAAG,6CAA6C,+QAA+Q,E;;;;;;;;;;;;;;;ACAlX,iEAAe,gWAAgW,SAAS,6KAA6K,sBAAsB,uHAAuH,uBAAuB,yHAAyH,sCAAsC,mIAAmI,yBAAyB,gFAAgF,6BAA6B,qXAAqX,WAAW,qDAAqD,WAAW,iOAAiO,kCAAkC,8FAA8F,E","file":"src_app_qr-result_qr-result_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QrResultComponent } from './qr-result.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QrResultComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QrResultRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QrResultService } from './qr-result.service';\n\n@Component({\n  selector: 'app-qr-result',\n  templateUrl: './qr-result.component.html',\n  styleUrls: ['./qr-result.component.scss'],\n})\nexport class QrResultComponent implements OnInit {\n  qrCode = this.route.snapshot.params.code;\n  userErr;\n  userDetails;\n\n  constructor(\n    private qrResult: QrResultService,\n    private route: ActivatedRoute\n  ) {}\n\n  getRes() {\n    this.qrResult.fetchResult(this.qrCode).subscribe(\n      (res: any) => {\n        res.regNumber = res.eligibleStudentIdStudentStudentRegNumber;\n        this.userDetails = res;\n        this.userDetails.fullName = this.fullName(\n          res.eligible_student_id.student.firstName,\n          res.eligible_student_id.student.middleName,\n          res.eligible_student_id.student.lastName\n        );\n      },\n      (err: any) => {\n        console.error(err);\n        if (err) {\n          this.userErr = err.error.message;\n        }\n      }\n    );\n  }\n\n  fullName(f: string, m: any, l: string) {\n    if (m === null) {\n      m = '';\n    }\n    return `${f} ${m} ${l}`; //15\n  }\n\n  ngOnInit() {\n    this.getRes();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { QrResultRoutingModule } from './qr-result-routing.module';\nimport { QrResultComponent } from './qr-result.component';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [QrResultComponent],\n  imports: [\n    CommonModule,\n    QrResultRoutingModule,\n    ZXingScannerModule,\n    IonicModule,\n  ],\n})\nexport class QrResultModule {}\n","export default \".unit-name {\\n  font-size: smaller;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInFyLXJlc3VsdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0YiLCJmaWxlIjoicXItcmVzdWx0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVuaXQtbmFtZSB7XG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcbn1cbiJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Student Details</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n\\n<ion-content [scrollEvents]=\\\"true\\\">\\n  <!-- Default Item -->\\n\\n  <ion-item *ngIf=\\\"userErr\\\" color=\\\"danger\\\">\\n    <ion-label>\\n      {{userErr}}\\n    </ion-label>\\n  </ion-item>\\n\\n  <div *ngIf=\\\"!userErr && userDetails\\\">\\n\\n\\n    <ion-item>\\n      <ion-note slot=\\\"end\\\">Student Name</ion-note>\\n      <ion-label>{{userDetails.fullName}}</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-note slot=\\\"end\\\">Reg. Number</ion-note>\\n      <ion-label>{{userDetails.regNumber}}</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-note slot=\\\"end\\\">Academic Year</ion-note>\\n      <ion-label>{{userDetails.examination.academicYear}}</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>\\n        <span class=\\\"ion-margin-end\\\">Year of study: <strong>0{{userDetails.yearOfStudy}}</strong></span>\\n        <span class=\\\"ion-margin-start\\\">Semester: <strong>0{{userDetails.semesterOfStudy}}</strong></span>\\n      </ion-label>\\n    </ion-item>\\n\\n    <div class=\\\"ion-margin\\\"></div>\\n    <ion-list>\\n      <ion-list-header lines=\\\"none\\\">\\n        <ion-label color=\\\"\\\">\\n          <h1>Units</h1>\\n        </ion-label>\\n      </ion-list-header>\\n      <ion-item *ngFor=\\\"let unit of userDetails.units\\\" lines=\\\"inset\\\">\\n        <span class=\\\"ion-margin-end\\\">{{unit.code}}</span> <span class=\\\"ion-margin-start unit-name\\\">{{unit.name}}</span>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n\\n\\n</ion-content>\\n\\n<ion-footer *ngIf=\\\"!userErr && userDetails\\\">\\n  <ion-item color=\\\"primary\\\">\\n    <ion-label class=\\\"ion-text-center unit-nam\\\">\\n      <strong>{{userDetails.fullName | uppercase}}</strong> is\\n      <strong>APPROVED</strong>\\n    </ion-label>\\n  </ion-item>\\n</ion-footer>\";"],"sourceRoot":"webpack:///"}